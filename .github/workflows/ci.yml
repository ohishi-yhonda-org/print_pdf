name: CI

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: [self-hosted, Windows, X64, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify Go installation
      run: go version
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Run tests
      run: go test -v ./...
      env:
        GOOS: windows
        GOARCH: amd64

    - name: Run tests with coverage
      continue-on-error: true
      run: go test -coverprofile=coverage.out .
      env:
        GOOS: windows
        GOARCH: amd64

    - name: Display coverage
      run: |
        if (Test-Path coverage.out) {
          go tool cover -func=coverage.out
        } else {
          Write-Host "Coverage file not generated, skipping coverage display"
        }
    
    - name: Upload coverage to Codecov
      if: hashFiles('coverage.out') != ''
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
    
    - name: Build application
      run: go build -v ./...

  lint:
    runs-on: [self-hosted, Windows, X64, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify Go installation
      run: go version
    
    - name: Install golangci-lint
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        golangci-lint --version
    
    - name: Run golangci-lint
      continue-on-error: true
      run: golangci-lint run ./...

  security:
    runs-on: [self-hosted, Windows, X64, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify Go installation
      run: go version
    
    - name: Run Gosec Security Scanner
      run: |
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec ./...

